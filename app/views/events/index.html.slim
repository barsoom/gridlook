.stats
  p.stat <b>Total events:</b> #{number_with_delimiter(total_count)}
  p.stat <b>Newest event:</b> #{newest_time || "-"}
  p.stat <b>Oldest event:</b> #{oldest_time || "-"}

= form_tag "", method: :get, class: "filter-form" do

  p
    => label_tag :email, "Exact email:"
    = email_field_tag :email, email, class: "filter-form-email"

  p
    => label_tag :name, "Event:"
    = select_tag :name, event_name_options(name)

  p
    => label_tag :mailer_action, "Mailer:"
    = select_tag :mailer_action, event_mailer_options(mailer_action)
    span.help-block
      small = "This is a cached list that is not updated automatically."

  / Only show it when a param has been provided. The idea is that we may link into a page with this filter applied, but are unlikely to enter things into this field directly.
  - if associated_record
    p
      => label_tag :associated_record, "Associated record:"
      = text_field_tag :associated_record, associated_record
      span.help-block
        small = "For example: <code>Item:123</code>".html_safe

  p = button_tag "Filter", type: :submit

- if filtered?(local_assigns)
  = button_to "Remove filters", {}, method: :get

- if events.any?

  p
    = prev_page_link(page)
    '
    = next_page_link(events, page)

  table.events-table= render events

  p
    = prev_page_link(page)
    '
    = next_page_link(events, page)

- else

  p
    - if params[:page]
      = prev_page_link(page)
      .no-more-events = "No more events"
      = prev_page_link(page)
    - else
      = "No events :("
